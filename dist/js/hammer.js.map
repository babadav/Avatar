{"version":3,"sources":["hammer.js"],"names":["window","document","exportName","undefined","ifUndefined","val1","val2","VENDOR_PREFIXES","TEST_ELEMENT","createElement","TYPE_FUNCTION","round","Math","abs","now","Date","prefixed","obj","property","prefix","prop","camelProp","toUpperCase","slice","i","length","getTouchActionProps","NATIVE_TOUCH_ACTION","touchMap","cssSupports","CSS","supports","forEach","val","PREFIXED_TOUCH_ACTION","style","TOUCH_ACTION_COMPUTE","TOUCH_ACTION_AUTO","TOUCH_ACTION_MANIPULATION","TOUCH_ACTION_NONE","TOUCH_ACTION_PAN_X","TOUCH_ACTION_PAN_Y","TOUCH_ACTION_MAP","MOBILE_REGEX","SUPPORT_TOUCH","SUPPORT_POINTER_EVENTS","SUPPORT_ONLY_TOUCH","test","navigator","userAgent","INPUT_TYPE_TOUCH","INPUT_TYPE_PEN","INPUT_TYPE_MOUSE","INPUT_TYPE_KINECT","COMPUTE_INTERVAL","INPUT_START","INPUT_MOVE","INPUT_END","INPUT_CANCEL","DIRECTION_NONE","DIRECTION_LEFT","DIRECTION_RIGHT","DIRECTION_UP","DIRECTION_DOWN","DIRECTION_HORIZONTAL","DIRECTION_VERTICAL","DIRECTION_ALL","PROPS_XY","PROPS_CLIENT_XY","STATE_POSSIBLE","STATE_BEGAN","STATE_CHANGED","STATE_ENDED","STATE_RECOGNIZED","STATE_CANCELLED","STATE_FAILED","assign","Object","target","TypeError","output","index","arguments","source","nextKey","hasOwnProperty","assign$1","_uniqueId","uniqueId","each","iterator","context","call","invokeArrayArg","arg","fn","Array","isArray","inArray","src","find","findByKey","indexOf","_typeof","Symbol","constructor","prototype","asyncGenerator","AwaitValue","value","AsyncGenerator","gen","front","back","send","key","Promise","resolve","reject","request","next","resume","result","then","settle","done","err","type","_invoke","return","asyncIterator","throw","wrap","apply","await","classCallCheck","instance","Constructor","createClass","defineProperties","props","descriptor","enumerable","configurable","writable","defineProperty","protoProps","staticProps","get","object","receiver","Function","desc","getOwnPropertyDescriptor","parent","getPrototypeOf","getter","inherits","subClass","superClass","create","setPrototypeOf","__proto__","possibleConstructorReturn","self","ReferenceError","slicedToArray","sliceIterator","arr","_arr","_n","_d","_e","_i","_s","push","boolOrFn","args","getRecognizerByNameIfManager","otherRecognizer","recognizer","manager","stateStr","state","Recognizer","options","defaults","id","enable","simultaneous","requireFail","set","touchAction","update","recognizeWith","dropRecognizeWith","requireFailure","dropRequireFailure","splice","hasRequireFailures","canRecognizeWith","emit","input","event","additionalEvent","tryEmit","canEmit","recognize","inputData","inputDataClone","reset","process","getTouchAction","AttrRecognizer","_Recognizer","attrTest","optionPointers","pointers","eventType","isRecognized","isValid","RotateRecognizer","_AttrRecognizer","rotation","threshold","PinchRecognizer","scale","inOut","directionStr","direction","PanRecognizer","_this","pX","pY","actions","directionTest","hasMoved","distance","x","deltaX","y","deltaY","SwipeRecognizer","velocity","overallVelocity","overallVelocityX","overallVelocityY","offsetDirection","maxPointers","bindFn","boundFn","setTimeoutContext","timeout","setTimeout","getDistance","p1","p2","sqrt","TapRecognizer","pTime","pCenter","_timer","_input","count","_this2","validPointers","validMovement","validTouchTime","deltaTime","time","failTimeout","validInterval","timeStamp","interval","validMultiTap","center","posThreshold","tapCount","taps","_this3","clearTimeout","PressRecognizer","validTime","inStr","str","cleanTouchActions","hasPanX","hasPanY","TouchAction","compute","element","toLowerCase","trim","recognizers","concat","join","preventDefaults","srcEvent","session","prevented","preventDefault","hasNone","isTapPointer","isTapMovement","isTapTouchTime","preventSrc","hasParent","node","parentNode","getCenter","pointersLength","clientX","clientY","simpleCloneInputData","getAngle","atan2","PI","getDirection","computeDeltaXY","offset","offsetDelta","prevDelta","prevInput","getVelocity","getScale","start","end","getRotation","computeIntervalInputData","last","lastInterval","velocityX","velocityY","v","computeInputData","firstInput","firstMultiple","offsetCenter","angle","inputHandler","pointersLen","changedPointersLen","changedPointers","isFirst","isFinal","splitStr","split","addEventListeners","types","handler","addEventListener","removeEventListeners","removeEventListener","getWindowForElement","doc","ownerDocument","defaultView","parentWindow","Input","callback","inputTarget","domHandler","ev","init","evEl","evTarget","evWin","destroy","POINTER_INPUT_MAP","pointerdown","pointermove","pointerup","pointercancel","pointerout","IE10_POINTER_TYPE_ENUM","POINTER_ELEMENT_EVENTS","POINTER_WINDOW_EVENTS","MSPointerEvent","PointerEvent","PointerEventInput","_Input","store","pointerEvents","removePointer","eventTypeNormalized","replace","pointerType","isTouch","storeIndex","pointerId","button","toArray$1","uniqueArray","sort","results","values","a","b","TOUCH_INPUT_MAP","touchstart","touchmove","touchend","touchcancel","TOUCH_TARGET_EVENTS","TouchInput","targetIds","touches","getTouches","allTouches","identifier","targetTouches","changedTouches","changedTargetTouches","filter","touch","MOUSE_INPUT_MAP","mousedown","mousemove","mouseup","MOUSE_ELEMENT_EVENTS","MOUSE_WINDOW_EVENTS","MouseInput","pressed","which","DEDUP_TIMEOUT","DEDUP_DISTANCE","TouchMouseInput","mouse","primaryTouch","lastTouches","inputEvent","isMouse","sourceCapabilities","firesTouchEvents","recordTouches","isSyntheticEvent","eventData","setLastTouch","_eventData$changedPoi","lastTouch","lts","removeLastTouch","t","dx","dy","createInputInstance","Type","inputClass","STOP","FORCED_STOP","Manager","Hammer","handlers","oldCssProps","toggleCssProps","item","add","stop","force","stopped","curRecognizer","existing","remove","on","events","off","data","domEvents","triggerDomEvent","cssProps","name","gestureEvent","createEvent","initEvent","gesture","dispatchEvent","preset","VERSION","userSelect","touchSelect","touchCallout","contentZooming","userDrag","tapHighlightColor","SINGLE_TOUCH_INPUT_MAP","SINGLE_TOUCH_TARGET_EVENTS","SINGLE_TOUCH_WINDOW_EVENTS","SingleTouchInput","started","normalizeSingleTouches","all","changed","deprecate","method","message","deprecationMessage","e","Error","stack","log","console","warn","extend","dest","merge","keys","inherit","child","base","properties","baseP","childP","_super","Tap","Pan","Swipe","Pinch","Rotate","Press","toArray","define","amd","module","exports"],"mappings":"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","file":"hammer.js","sourcesContent":["/*! Hammer.JS - v2.0.8 - 2016-09-30\n * http://hammerjs.github.io/\n *\n * Copyright (c)  Jorik Tangelder;\n * Licensed under the MIT license */\n(function(window, document, exportName, undefined) { \n'use strict';\n/**\n * @private\n * use the val2 when val1 is undefined\n * @param {*} val1\n * @param {*} val2\n * @returns {*}\n */\nfunction ifUndefined(val1, val2) {\n  return val1 === undefined ? val2 : val1;\n}\n\nvar VENDOR_PREFIXES = ['', 'webkit', 'Moz', 'MS', 'ms', 'o'];\nvar TEST_ELEMENT = document.createElement('div');\n\nvar TYPE_FUNCTION = 'function';\n\nvar round = Math.round;\nvar abs = Math.abs;\nvar now = Date.now;\n\n/**\n * @private\n * get the prefixed property\n * @param {Object} obj\n * @param {String} property\n * @returns {String|Undefined} prefixed\n */\nfunction prefixed(obj, property) {\n  var prefix = void 0;\n  var prop = void 0;\n  var camelProp = property[0].toUpperCase() + property.slice(1);\n\n  var i = 0;\n  while (i < VENDOR_PREFIXES.length) {\n    prefix = VENDOR_PREFIXES[i];\n    prop = prefix ? prefix + camelProp : property;\n\n    if (prop in obj) {\n      return prop;\n    }\n    i++;\n  }\n  return undefined;\n}\n\nfunction getTouchActionProps() {\n  if (!NATIVE_TOUCH_ACTION) {\n    return false;\n  }\n  var touchMap = {};\n  var cssSupports = window.CSS && window.CSS.supports;\n  ['auto', 'manipulation', 'pan-y', 'pan-x', 'pan-x pan-y', 'none'].forEach(function (val) {\n\n    // If css.supports is not supported but there is native touch-action assume it supports\n    // all values. This is the case for IE 10 and 11.\n    return touchMap[val] = cssSupports ? window.CSS.supports('touch-action', val) : true;\n  });\n  return touchMap;\n}\n\nvar PREFIXED_TOUCH_ACTION = prefixed(TEST_ELEMENT.style, 'touchAction');\nvar NATIVE_TOUCH_ACTION = PREFIXED_TOUCH_ACTION !== undefined;\n\n// magical touchAction value\nvar TOUCH_ACTION_COMPUTE = 'compute';\nvar TOUCH_ACTION_AUTO = 'auto';\nvar TOUCH_ACTION_MANIPULATION = 'manipulation'; // not implemented\nvar TOUCH_ACTION_NONE = 'none';\nvar TOUCH_ACTION_PAN_X = 'pan-x';\nvar TOUCH_ACTION_PAN_Y = 'pan-y';\nvar TOUCH_ACTION_MAP = getTouchActionProps();\n\nvar MOBILE_REGEX = /mobile|tablet|ip(ad|hone|od)|android/i;\n\nvar SUPPORT_TOUCH = 'ontouchstart' in window;\nvar SUPPORT_POINTER_EVENTS = prefixed(window, 'PointerEvent') !== undefined;\nvar SUPPORT_ONLY_TOUCH = SUPPORT_TOUCH && MOBILE_REGEX.test(navigator.userAgent);\n\nvar INPUT_TYPE_TOUCH = 'touch';\nvar INPUT_TYPE_PEN = 'pen';\nvar INPUT_TYPE_MOUSE = 'mouse';\nvar INPUT_TYPE_KINECT = 'kinect';\n\nvar COMPUTE_INTERVAL = 25;\n\nvar INPUT_START = 1;\nvar INPUT_MOVE = 2;\nvar INPUT_END = 4;\nvar INPUT_CANCEL = 8;\n\nvar DIRECTION_NONE = 1;\nvar DIRECTION_LEFT = 2;\nvar DIRECTION_RIGHT = 4;\nvar DIRECTION_UP = 8;\nvar DIRECTION_DOWN = 16;\n\nvar DIRECTION_HORIZONTAL = DIRECTION_LEFT | DIRECTION_RIGHT;\nvar DIRECTION_VERTICAL = DIRECTION_UP | DIRECTION_DOWN;\nvar DIRECTION_ALL = DIRECTION_HORIZONTAL | DIRECTION_VERTICAL;\n\nvar PROPS_XY = ['x', 'y'];\nvar PROPS_CLIENT_XY = ['clientX', 'clientY'];\n\nvar STATE_POSSIBLE = 1;\nvar STATE_BEGAN = 2;\nvar STATE_CHANGED = 4;\nvar STATE_ENDED = 8;\nvar STATE_RECOGNIZED = STATE_ENDED;\nvar STATE_CANCELLED = 16;\nvar STATE_FAILED = 32;\n\n/**\n * @private\n * extend object.\n * means that properties in dest will be overwritten by the ones in src.\n * @param {Object} target\n * @param {...Object} objects_to_assign\n * @returns {Object} target\n */\nvar assign = void 0;\nif (typeof Object.assign !== 'function') {\n  assign = function assign(target) {\n    if (target === undefined || target === null) {\n      throw new TypeError('Cannot convert undefined or null to object');\n    }\n\n    var output = Object(target);\n    for (var index = 1; index < arguments.length; index++) {\n      var source = arguments[index];\n      if (source !== undefined && source !== null) {\n        for (var nextKey in source) {\n          if (source.hasOwnProperty(nextKey)) {\n            output[nextKey] = source[nextKey];\n          }\n        }\n      }\n    }\n    return output;\n  };\n} else {\n  assign = Object.assign;\n}\n\nvar assign$1 = assign;\n\n/**\n * @private\n * get a unique id\n * @returns {number} uniqueId\n */\nvar _uniqueId = 1;\nfunction uniqueId() {\n  return _uniqueId++;\n}\n\n/**\n * @private\n * walk objects and arrays\n * @param {Object} obj\n * @param {Function} iterator\n * @param {Object} context\n */\nfunction each(obj, iterator, context) {\n  var i = void 0;\n\n  if (!obj) {\n    return;\n  }\n\n  if (obj.forEach) {\n    obj.forEach(iterator, context);\n  } else if (obj.length !== undefined) {\n    i = 0;\n    while (i < obj.length) {\n      iterator.call(context, obj[i], i, obj);\n      i++;\n    }\n  } else {\n    for (i in obj) {\n      obj.hasOwnProperty(i) && iterator.call(context, obj[i], i, obj);\n    }\n  }\n}\n\n/**\n * @private\n * if the argument is an array, we want to execute the fn on each entry\n * if it aint an array we don't want to do a thing.\n * this is used by all the methods that accept a single and array argument.\n * @param {*|Array} arg\n * @param {String} fn\n * @param {Object} [context]\n * @returns {Boolean}\n */\nfunction invokeArrayArg(arg, fn, context) {\n  if (Array.isArray(arg)) {\n    each(arg, context[fn], context);\n    return true;\n  }\n  return false;\n}\n\n/**\n * @private\n * find if a array contains the object using indexOf or a simple polyFill\n * @param {Array} src\n * @param {String} find\n * @param {String} [findByKey]\n * @return {Boolean|Number} false when not found, or the index\n */\nfunction inArray(src, find, findByKey) {\n  if (src.indexOf && !findByKey) {\n    return src.indexOf(find);\n  } else {\n    var i = 0;\n    while (i < src.length) {\n      if (findByKey && src[i][findByKey] == find || !findByKey && src[i] === find) {\n        // do not use === here, test fails\n        return i;\n      }\n      i++;\n    }\n    return -1;\n  }\n}\n\nvar _typeof = typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\" ? function (obj) {\n  return typeof obj;\n} : function (obj) {\n  return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj;\n};\n\nvar asyncGenerator = function () {\n  function AwaitValue(value) {\n    this.value = value;\n  }\n\n  function AsyncGenerator(gen) {\n    var front, back;\n\n    function send(key, arg) {\n      return new Promise(function (resolve, reject) {\n        var request = {\n          key: key,\n          arg: arg,\n          resolve: resolve,\n          reject: reject,\n          next: null\n        };\n\n        if (back) {\n          back = back.next = request;\n        } else {\n          front = back = request;\n          resume(key, arg);\n        }\n      });\n    }\n\n    function resume(key, arg) {\n      try {\n        var result = gen[key](arg);\n        var value = result.value;\n\n        if (value instanceof AwaitValue) {\n          Promise.resolve(value.value).then(function (arg) {\n            resume(\"next\", arg);\n          }, function (arg) {\n            resume(\"throw\", arg);\n          });\n        } else {\n          settle(result.done ? \"return\" : \"normal\", result.value);\n        }\n      } catch (err) {\n        settle(\"throw\", err);\n      }\n    }\n\n    function settle(type, value) {\n      switch (type) {\n        case \"return\":\n          front.resolve({\n            value: value,\n            done: true\n          });\n          break;\n\n        case \"throw\":\n          front.reject(value);\n          break;\n\n        default:\n          front.resolve({\n            value: value,\n            done: false\n          });\n          break;\n      }\n\n      front = front.next;\n\n      if (front) {\n        resume(front.key, front.arg);\n      } else {\n        back = null;\n      }\n    }\n\n    this._invoke = send;\n\n    if (typeof gen.return !== \"function\") {\n      this.return = undefined;\n    }\n  }\n\n  if (typeof Symbol === \"function\" && Symbol.asyncIterator) {\n    AsyncGenerator.prototype[Symbol.asyncIterator] = function () {\n      return this;\n    };\n  }\n\n  AsyncGenerator.prototype.next = function (arg) {\n    return this._invoke(\"next\", arg);\n  };\n\n  AsyncGenerator.prototype.throw = function (arg) {\n    return this._invoke(\"throw\", arg);\n  };\n\n  AsyncGenerator.prototype.return = function (arg) {\n    return this._invoke(\"return\", arg);\n  };\n\n  return {\n    wrap: function (fn) {\n      return function () {\n        return new AsyncGenerator(fn.apply(this, arguments));\n      };\n    },\n    await: function (value) {\n      return new AwaitValue(value);\n    }\n  };\n}();\n\nvar classCallCheck = function (instance, Constructor) {\n  if (!(instance instanceof Constructor)) {\n    throw new TypeError(\"Cannot call a class as a function\");\n  }\n};\n\nvar createClass = function () {\n  function defineProperties(target, props) {\n    for (var i = 0; i < props.length; i++) {\n      var descriptor = props[i];\n      descriptor.enumerable = descriptor.enumerable || false;\n      descriptor.configurable = true;\n      if (\"value\" in descriptor) descriptor.writable = true;\n      Object.defineProperty(target, descriptor.key, descriptor);\n    }\n  }\n\n  return function (Constructor, protoProps, staticProps) {\n    if (protoProps) defineProperties(Constructor.prototype, protoProps);\n    if (staticProps) defineProperties(Constructor, staticProps);\n    return Constructor;\n  };\n}();\n\nvar get = function get(object, property, receiver) {\n  if (object === null) object = Function.prototype;\n  var desc = Object.getOwnPropertyDescriptor(object, property);\n\n  if (desc === undefined) {\n    var parent = Object.getPrototypeOf(object);\n\n    if (parent === null) {\n      return undefined;\n    } else {\n      return get(parent, property, receiver);\n    }\n  } else if (\"value\" in desc) {\n    return desc.value;\n  } else {\n    var getter = desc.get;\n\n    if (getter === undefined) {\n      return undefined;\n    }\n\n    return getter.call(receiver);\n  }\n};\n\nvar inherits = function (subClass, superClass) {\n  if (typeof superClass !== \"function\" && superClass !== null) {\n    throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass);\n  }\n\n  subClass.prototype = Object.create(superClass && superClass.prototype, {\n    constructor: {\n      value: subClass,\n      enumerable: false,\n      writable: true,\n      configurable: true\n    }\n  });\n  if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass;\n};\n\nvar possibleConstructorReturn = function (self, call) {\n  if (!self) {\n    throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");\n  }\n\n  return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self;\n};\n\nvar slicedToArray = function () {\n  function sliceIterator(arr, i) {\n    var _arr = [];\n    var _n = true;\n    var _d = false;\n    var _e = undefined;\n\n    try {\n      for (var _i = arr[Symbol.iterator](), _s; !(_n = (_s = _i.next()).done); _n = true) {\n        _arr.push(_s.value);\n\n        if (i && _arr.length === i) break;\n      }\n    } catch (err) {\n      _d = true;\n      _e = err;\n    } finally {\n      try {\n        if (!_n && _i[\"return\"]) _i[\"return\"]();\n      } finally {\n        if (_d) throw _e;\n      }\n    }\n\n    return _arr;\n  }\n\n  return function (arr, i) {\n    if (Array.isArray(arr)) {\n      return arr;\n    } else if (Symbol.iterator in Object(arr)) {\n      return sliceIterator(arr, i);\n    } else {\n      throw new TypeError(\"Invalid attempt to destructure non-iterable instance\");\n    }\n  };\n}();\n\n/**\n * @private\n * let a boolean value also be a function that must return a boolean\n * this first item in args will be used as the context\n * @param {Boolean|Function} val\n * @param {Array} [args]\n * @returns {Boolean}\n */\nfunction boolOrFn(val, args) {\n  if ((typeof val === 'undefined' ? 'undefined' : _typeof(val)) === TYPE_FUNCTION) {\n    return val.apply(args ? args[0] || undefined : undefined, args);\n  }\n  return val;\n}\n\n/**\n * @private\n * get a recognizer by name if it is bound to a manager\n * @param {Recognizer|String} otherRecognizer\n * @param {Recognizer} recognizer\n * @returns {Recognizer}\n */\nfunction getRecognizerByNameIfManager(otherRecognizer, recognizer) {\n  var manager = recognizer.manager;\n\n  if (manager) {\n    return manager.get(otherRecognizer);\n  }\n  return otherRecognizer;\n}\n\n/**\n * @private\n * get a usable string, used as event postfix\n * @param {constant} state\n * @returns {String} state\n */\nfunction stateStr(state) {\n  if (state & STATE_CANCELLED) {\n    return 'cancel';\n  } else if (state & STATE_ENDED) {\n    return 'end';\n  } else if (state & STATE_CHANGED) {\n    return 'move';\n  } else if (state & STATE_BEGAN) {\n    return 'start';\n  }\n  return '';\n}\n\n/**\n * @private\n * Recognizer flow explained; *\n * All recognizers have the initial state of POSSIBLE when a input session starts.\n * The definition of a input session is from the first input until the last input, with all it's movement in it. *\n * Example session for mouse-input: mousedown -> mousemove -> mouseup\n *\n * On each recognizing cycle (see Manager.recognize) the .recognize() method is executed\n * which determines with state it should be.\n *\n * If the recognizer has the state FAILED, CANCELLED or RECOGNIZED (equals ENDED), it is reset to\n * POSSIBLE to give it another change on the next cycle.\n *\n *               Possible\n *                  |\n *            +-----+---------------+\n *            |                     |\n *      +-----+-----+               |\n *      |           |               |\n *   Failed      Cancelled          |\n *                          +-------+------+\n *                          |              |\n *                      Recognized       Began\n *                                         |\n *                                      Changed\n *                                         |\n *                                  Ended/Recognized\n */\n\n/**\n * @private\n * Recognizer\n * Every recognizer needs to extend from this class.\n * @constructor\n * @param {Object} options\n */\n\nvar Recognizer = function () {\n  function Recognizer(options) {\n    classCallCheck(this, Recognizer);\n\n    this.options = assign$1({}, this.defaults, options || {});\n\n    this.id = uniqueId();\n\n    this.manager = null;\n\n    // default is enable true\n    this.options.enable = ifUndefined(this.options.enable, true);\n\n    this.state = STATE_POSSIBLE;\n    this.simultaneous = {};\n    this.requireFail = [];\n  }\n\n  /**\n   * @private\n   * set options\n   * @param {Object} options\n   * @return {Recognizer}\n   */\n\n\n  createClass(Recognizer, [{\n    key: 'set',\n    value: function set(options) {\n      assign$1(this.options, options);\n\n      // also update the touchAction, in case something changed about the directions/enabled state\n      this.manager && this.manager.touchAction.update();\n      return this;\n    }\n\n    /**\n     * @private\n     * recognize simultaneous with an other recognizer.\n     * @param {Recognizer} otherRecognizer\n     * @returns {Recognizer} this\n     */\n\n  }, {\n    key: 'recognizeWith',\n    value: function recognizeWith(otherRecognizer) {\n      if (invokeArrayArg(otherRecognizer, 'recognizeWith', this)) {\n        return this;\n      }\n\n      var simultaneous = this.simultaneous;\n\n      otherRecognizer = getRecognizerByNameIfManager(otherRecognizer, this);\n      if (!simultaneous[otherRecognizer.id]) {\n        simultaneous[otherRecognizer.id] = otherRecognizer;\n        otherRecognizer.recognizeWith(this);\n      }\n      return this;\n    }\n\n    /**\n     * @private\n     * drop the simultaneous link. it doesnt remove the link on the other recognizer.\n     * @param {Recognizer} otherRecognizer\n     * @returns {Recognizer} this\n     */\n\n  }, {\n    key: 'dropRecognizeWith',\n    value: function dropRecognizeWith(otherRecognizer) {\n      if (invokeArrayArg(otherRecognizer, 'dropRecognizeWith', this)) {\n        return this;\n      }\n\n      otherRecognizer = getRecognizerByNameIfManager(otherRecognizer, this);\n      delete this.simultaneous[otherRecognizer.id];\n      return this;\n    }\n\n    /**\n     * @private\n     * recognizer can only run when an other is failing\n     * @param {Recognizer} otherRecognizer\n     * @returns {Recognizer} this\n     */\n\n  }, {\n    key: 'requireFailure',\n    value: function requireFailure(otherRecognizer) {\n      if (invokeArrayArg(otherRecognizer, 'requireFailure', this)) {\n        return this;\n      }\n\n      var requireFail = this.requireFail;\n\n      otherRecognizer = getRecognizerByNameIfManager(otherRecognizer, this);\n      if (inArray(requireFail, otherRecognizer) === -1) {\n        requireFail.push(otherRecognizer);\n        otherRecognizer.requireFailure(this);\n      }\n      return this;\n    }\n\n    /**\n     * @private\n     * drop the requireFailure link. it does not remove the link on the other recognizer.\n     * @param {Recognizer} otherRecognizer\n     * @returns {Recognizer} this\n     */\n\n  }, {\n    key: 'dropRequireFailure',\n    value: function dropRequireFailure(otherRecognizer) {\n      if (invokeArrayArg(otherRecognizer, 'dropRequireFailure', this)) {\n        return this;\n      }\n\n      otherRecognizer = getRecognizerByNameIfManager(otherRecognizer, this);\n      var index = inArray(this.requireFail, otherRecognizer);\n      if (index > -1) {\n        this.requireFail.splice(index, 1);\n      }\n      return this;\n    }\n\n    /**\n     * @private\n     * has require failures boolean\n     * @returns {boolean}\n     */\n\n  }, {\n    key: 'hasRequireFailures',\n    value: function hasRequireFailures() {\n      return this.requireFail.length > 0;\n    }\n\n    /**\n     * @private\n     * if the recognizer can recognize simultaneous with an other recognizer\n     * @param {Recognizer} otherRecognizer\n     * @returns {Boolean}\n     */\n\n  }, {\n    key: 'canRecognizeWith',\n    value: function canRecognizeWith(otherRecognizer) {\n      return !!this.simultaneous[otherRecognizer.id];\n    }\n\n    /**\n     * @private\n     * You should use `tryEmit` instead of `emit` directly to check\n     * that all the needed recognizers has failed before emitting.\n     * @param {Object} input\n     */\n\n  }, {\n    key: 'emit',\n    value: function emit(input) {\n      var self = this;\n      var state = this.state;\n\n\n      function emit(event) {\n        self.manager.emit(event, input);\n      }\n\n      // 'panstart' and 'panmove'\n      if (state < STATE_ENDED) {\n        emit(self.options.event + stateStr(state));\n      }\n\n      emit(self.options.event); // simple 'eventName' events\n\n      if (input.additionalEvent) {\n        // additional event(panleft, panright, pinchin, pinchout...)\n        emit(input.additionalEvent);\n      }\n\n      // panend and pancancel\n      if (state >= STATE_ENDED) {\n        emit(self.options.event + stateStr(state));\n      }\n    }\n\n    /**\n     * @private\n     * Check that all the require failure recognizers has failed,\n     * if true, it emits a gesture event,\n     * otherwise, setup the state to FAILED.\n     * @param {Object} input\n     */\n\n  }, {\n    key: 'tryEmit',\n    value: function tryEmit(input) {\n      if (this.canEmit()) {\n        return this.emit(input);\n      }\n      // it's failing anyway\n      this.state = STATE_FAILED;\n    }\n\n    /**\n     * @private\n     * can we emit?\n     * @returns {boolean}\n     */\n\n  }, {\n    key: 'canEmit',\n    value: function canEmit() {\n      var i = 0;\n      while (i < this.requireFail.length) {\n        if (!(this.requireFail[i].state & (STATE_FAILED | STATE_POSSIBLE))) {\n          return false;\n        }\n        i++;\n      }\n      return true;\n    }\n\n    /**\n     * @private\n     * update the recognizer\n     * @param {Object} inputData\n     */\n\n  }, {\n    key: 'recognize',\n    value: function recognize(inputData) {\n      // make a new copy of the inputData\n      // so we can change the inputData without messing up the other recognizers\n      var inputDataClone = assign$1({}, inputData);\n\n      // is is enabled and allow recognizing?\n      if (!boolOrFn(this.options.enable, [this, inputDataClone])) {\n        this.reset();\n        this.state = STATE_FAILED;\n        return;\n      }\n\n      // reset when we've reached the end\n      if (this.state & (STATE_RECOGNIZED | STATE_CANCELLED | STATE_FAILED)) {\n        this.state = STATE_POSSIBLE;\n      }\n\n      this.state = this.process(inputDataClone);\n\n      // the recognizer has recognized a gesture\n      // so trigger an event\n      if (this.state & (STATE_BEGAN | STATE_CHANGED | STATE_ENDED | STATE_CANCELLED)) {\n        this.tryEmit(inputDataClone);\n      }\n    }\n\n    /**\n     * @private\n     * return the state of the recognizer\n     * the actual recognizing happens in this method\n     * @virtual\n     * @param {Object} inputData\n     * @returns {constant} STATE\n     */\n\n    /* jshint ignore:start */\n\n  }, {\n    key: 'process',\n    value: function process(inputData) {}\n    /* jshint ignore:end */\n\n    /**\n     * @private\n     * return the preferred touch-action\n     * @virtual\n     * @returns {Array}\n     */\n\n  }, {\n    key: 'getTouchAction',\n    value: function getTouchAction() {}\n\n    /**\n     * @private\n     * called when the gesture isn't allowed to recognize\n     * like when another is being recognized or it is disabled\n     * @virtual\n     */\n\n  }, {\n    key: 'reset',\n    value: function reset() {}\n  }]);\n  return Recognizer;\n}();\n\nRecognizer.prototype.defaults = {};\n\n/**\n * @private\n * This recognizer is just used as a base for the simple attribute recognizers.\n * @constructor\n * @extends Recognizer\n */\n\nvar AttrRecognizer = function (_Recognizer) {\n  inherits(AttrRecognizer, _Recognizer);\n\n  function AttrRecognizer() {\n    classCallCheck(this, AttrRecognizer);\n    return possibleConstructorReturn(this, (AttrRecognizer.__proto__ || Object.getPrototypeOf(AttrRecognizer)).apply(this, arguments));\n  }\n\n  /**\n   * @private\n   * Used to check if it the recognizer receives valid input, like input.distance > 10.\n   * @memberof AttrRecognizer\n   * @param {Object} input\n   * @returns {Boolean} recognized\n   */\n\n\n  createClass(AttrRecognizer, [{\n    key: 'attrTest',\n    value: function attrTest(input) {\n      var optionPointers = this.options.pointers;\n      return optionPointers === 0 || input.pointers.length === optionPointers;\n    }\n\n    /**\n     * @private\n     * Process the input and return the state for the recognizer\n     * @memberof AttrRecognizer\n     * @param {Object} input\n     * @returns {*} State\n     */\n\n  }, {\n    key: 'process',\n    value: function process(input) {\n      var state = this.state;\n      var eventType = input.eventType;\n\n\n      var isRecognized = state & (STATE_BEGAN | STATE_CHANGED);\n      var isValid = this.attrTest(input);\n\n      // on cancel input and we've recognized before, return STATE_CANCELLED\n      if (isRecognized && (eventType & INPUT_CANCEL || !isValid)) {\n        return state | STATE_CANCELLED;\n      } else if (isRecognized || isValid) {\n        if (eventType & INPUT_END) {\n          return state | STATE_ENDED;\n        } else if (!(state & STATE_BEGAN)) {\n          return STATE_BEGAN;\n        }\n        return state | STATE_CHANGED;\n      }\n      return STATE_FAILED;\n    }\n  }]);\n  return AttrRecognizer;\n}(Recognizer);\n\nAttrRecognizer.prototype.defaults = {\n  /**\n   * @private\n   * @type {Number}\n   * @default 1\n   */\n  pointers: 1\n};\n\n/**\n * @private\n * Rotate\n * Recognized when two or more pointer are moving in a circular motion.\n * @constructor\n * @extends AttrRecognizer\n */\n\nvar RotateRecognizer = function (_AttrRecognizer) {\n  inherits(RotateRecognizer, _AttrRecognizer);\n\n  function RotateRecognizer() {\n    classCallCheck(this, RotateRecognizer);\n    return possibleConstructorReturn(this, (RotateRecognizer.__proto__ || Object.getPrototypeOf(RotateRecognizer)).apply(this, arguments));\n  }\n\n  createClass(RotateRecognizer, [{\n    key: 'getTouchAction',\n    value: function getTouchAction() {\n      return [TOUCH_ACTION_NONE];\n    }\n  }, {\n    key: 'attrTest',\n    value: function attrTest(input) {\n      return get(RotateRecognizer.prototype.__proto__ || Object.getPrototypeOf(RotateRecognizer.prototype), 'attrTest', this).call(this, input) && (Math.abs(input.rotation) > this.options.threshold || this.state & STATE_BEGAN);\n    }\n  }]);\n  return RotateRecognizer;\n}(AttrRecognizer);\n\nRotateRecognizer.prototype.defaults = {\n  event: 'rotate',\n  threshold: 0,\n  pointers: 2\n};\n\n/**\n * @private\n * Pinch\n * Recognized when two or more pointers are moving toward (zoom-in) or away from each other (zoom-out).\n * @constructor\n * @extends AttrRecognizer\n */\n\nvar PinchRecognizer = function (_AttrRecognizer) {\n  inherits(PinchRecognizer, _AttrRecognizer);\n\n  function PinchRecognizer() {\n    classCallCheck(this, PinchRecognizer);\n    return possibleConstructorReturn(this, (PinchRecognizer.__proto__ || Object.getPrototypeOf(PinchRecognizer)).apply(this, arguments));\n  }\n\n  createClass(PinchRecognizer, [{\n    key: 'getTouchAction',\n    value: function getTouchAction() {\n      return [TOUCH_ACTION_NONE];\n    }\n  }, {\n    key: 'attrTest',\n    value: function attrTest(input) {\n      return get(PinchRecognizer.prototype.__proto__ || Object.getPrototypeOf(PinchRecognizer.prototype), 'attrTest', this).call(this, input) && (Math.abs(input.scale - 1) > this.options.threshold || this.state & STATE_BEGAN);\n    }\n  }, {\n    key: 'emit',\n    value: function emit(input) {\n      if (input.scale !== 1) {\n        var inOut = input.scale < 1 ? 'in' : 'out';\n        input.additionalEvent = this.options.event + inOut;\n      }\n      get(PinchRecognizer.prototype.__proto__ || Object.getPrototypeOf(PinchRecognizer.prototype), 'emit', this).call(this, input);\n    }\n  }]);\n  return PinchRecognizer;\n}(AttrRecognizer);\n\nPinchRecognizer.prototype.defaults = {\n  event: 'pinch',\n  threshold: 0,\n  pointers: 2\n};\n\n/**\n * @private\n * direction cons to string\n * @param {constant} direction\n * @returns {String}\n */\nfunction directionStr(direction) {\n  if (direction === DIRECTION_DOWN) {\n    return 'down';\n  } else if (direction === DIRECTION_UP) {\n    return 'up';\n  } else if (direction === DIRECTION_LEFT) {\n    return 'left';\n  } else if (direction === DIRECTION_RIGHT) {\n    return 'right';\n  }\n  return '';\n}\n\n/**\n * @private\n * Pan\n * Recognized when the pointer is down and moved in the allowed direction.\n * @constructor\n * @extends AttrRecognizer\n */\n\nvar PanRecognizer = function (_AttrRecognizer) {\n  inherits(PanRecognizer, _AttrRecognizer);\n\n  function PanRecognizer() {\n    classCallCheck(this, PanRecognizer);\n\n    var _this = possibleConstructorReturn(this, (PanRecognizer.__proto__ || Object.getPrototypeOf(PanRecognizer)).apply(this, arguments));\n\n    _this.pX = null;\n    _this.pY = null;\n    return _this;\n  }\n\n  createClass(PanRecognizer, [{\n    key: 'getTouchAction',\n    value: function getTouchAction() {\n      var direction = this.options.direction;\n\n      var actions = [];\n      if (direction & DIRECTION_HORIZONTAL) {\n        actions.push(TOUCH_ACTION_PAN_Y);\n      }\n      if (direction & DIRECTION_VERTICAL) {\n        actions.push(TOUCH_ACTION_PAN_X);\n      }\n      return actions;\n    }\n  }, {\n    key: 'directionTest',\n    value: function directionTest(input) {\n      var options = this.options;\n\n      var hasMoved = true;\n      var distance = input.distance;\n      var direction = input.direction;\n\n      var x = input.deltaX;\n      var y = input.deltaY;\n\n      // lock to axis?\n      if (!(direction & options.direction)) {\n        if (options.direction & DIRECTION_HORIZONTAL) {\n          direction = x === 0 ? DIRECTION_NONE : x < 0 ? DIRECTION_LEFT : DIRECTION_RIGHT;\n          hasMoved = x !== this.pX;\n          distance = Math.abs(input.deltaX);\n        } else {\n          direction = y === 0 ? DIRECTION_NONE : y < 0 ? DIRECTION_UP : DIRECTION_DOWN;\n          hasMoved = y !== this.pY;\n          distance = Math.abs(input.deltaY);\n        }\n      }\n      input.direction = direction;\n      return hasMoved && distance > options.threshold && direction & options.direction;\n    }\n  }, {\n    key: 'attrTest',\n    value: function attrTest(input) {\n      return AttrRecognizer.prototype.attrTest.call(this, input) && ( // replace with a super call\n      this.state & STATE_BEGAN || !(this.state & STATE_BEGAN) && this.directionTest(input));\n    }\n  }, {\n    key: 'emit',\n    value: function emit(input) {\n\n      this.pX = input.deltaX;\n      this.pY = input.deltaY;\n\n      var direction = directionStr(input.direction);\n\n      if (direction) {\n        input.additionalEvent = this.options.event + direction;\n      }\n      get(PanRecognizer.prototype.__proto__ || Object.getPrototypeOf(PanRecognizer.prototype), 'emit', this).call(this, input);\n    }\n  }]);\n  return PanRecognizer;\n}(AttrRecognizer);\n\nPanRecognizer.prototype.defaults = {\n  event: 'pan',\n  threshold: 10,\n  pointers: 1,\n  direction: DIRECTION_ALL\n};\n\n/**\n * @private\n * Swipe\n * Recognized when the pointer is moving fast (velocity), with enough distance in the allowed direction.\n * @constructor\n * @extends AttrRecognizer\n */\n\nvar SwipeRecognizer = function (_AttrRecognizer) {\n  inherits(SwipeRecognizer, _AttrRecognizer);\n\n  function SwipeRecognizer() {\n    classCallCheck(this, SwipeRecognizer);\n    return possibleConstructorReturn(this, (SwipeRecognizer.__proto__ || Object.getPrototypeOf(SwipeRecognizer)).apply(this, arguments));\n  }\n\n  createClass(SwipeRecognizer, [{\n    key: 'getTouchAction',\n    value: function getTouchAction() {\n      return PanRecognizer.prototype.getTouchAction.call(this);\n    }\n  }, {\n    key: 'attrTest',\n    value: function attrTest(input) {\n      var direction = this.options.direction;\n\n      var velocity = void 0;\n\n      if (direction & (DIRECTION_HORIZONTAL | DIRECTION_VERTICAL)) {\n        velocity = input.overallVelocity;\n      } else if (direction & DIRECTION_HORIZONTAL) {\n        velocity = input.overallVelocityX;\n      } else if (direction & DIRECTION_VERTICAL) {\n        velocity = input.overallVelocityY;\n      }\n\n      return get(SwipeRecognizer.prototype.__proto__ || Object.getPrototypeOf(SwipeRecognizer.prototype), 'attrTest', this).call(this, input) && direction & input.offsetDirection && input.distance > this.options.threshold && input.maxPointers === this.options.pointers && abs(velocity) > this.options.velocity && input.eventType & INPUT_END;\n    }\n  }, {\n    key: 'emit',\n    value: function emit(input) {\n      var direction = directionStr(input.offsetDirection);\n      if (direction) {\n        this.manager.emit(this.options.event + direction, input);\n      }\n\n      this.manager.emit(this.options.event, input);\n    }\n  }]);\n  return SwipeRecognizer;\n}(AttrRecognizer);\n\nSwipeRecognizer.prototype.defaults = {\n  event: 'swipe',\n  threshold: 10,\n  velocity: 0.3,\n  direction: DIRECTION_HORIZONTAL | DIRECTION_VERTICAL,\n  pointers: 1\n};\n\n/**\n * @private\n * simple function bind\n * @param {Function} fn\n * @param {Object} context\n * @returns {Function}\n */\nfunction bindFn(fn, context) {\n  return function boundFn() {\n    return fn.apply(context, arguments);\n  };\n}\n\n/**\n * @private\n * set a timeout with a given scope\n * @param {Function} fn\n * @param {Number} timeout\n * @param {Object} context\n * @returns {number}\n */\nfunction setTimeoutContext(fn, timeout, context) {\n  return setTimeout(bindFn(fn, context), timeout);\n}\n\n/**\n * @private\n * calculate the absolute distance between two points\n * @param {Object} p1 {x, y}\n * @param {Object} p2 {x, y}\n * @param {Array} [props] containing x and y keys\n * @return {Number} distance\n */\nfunction getDistance(p1, p2, props) {\n  if (!props) {\n    props = PROPS_XY;\n  }\n  var x = p2[props[0]] - p1[props[0]];\n  var y = p2[props[1]] - p1[props[1]];\n\n  return Math.sqrt(x * x + y * y);\n}\n\n/**\n * @private\n * A tap is recognized when the pointer is doing a small tap/click. Multiple taps are recognized if they occur\n * between the given interval and position. The delay option can be used to recognize multi-taps without firing\n * a single tap.\n *\n * The eventData from the emitted event contains the property `tapCount`, which contains the amount of\n * multi-taps being recognized.\n * @constructor\n * @extends Recognizer\n */\n\nvar TapRecognizer = function (_Recognizer) {\n  inherits(TapRecognizer, _Recognizer);\n\n  function TapRecognizer() {\n    classCallCheck(this, TapRecognizer);\n\n    // previous time and center,\n    // used for tap counting\n    var _this = possibleConstructorReturn(this, (TapRecognizer.__proto__ || Object.getPrototypeOf(TapRecognizer)).apply(this, arguments));\n\n    _this.pTime = false;\n    _this.pCenter = false;\n\n    _this._timer = null;\n    _this._input = null;\n    _this.count = 0;\n    return _this;\n  }\n\n  createClass(TapRecognizer, [{\n    key: 'getTouchAction',\n    value: function getTouchAction() {\n      return [TOUCH_ACTION_MANIPULATION];\n    }\n  }, {\n    key: 'process',\n    value: function process(input) {\n      var _this2 = this;\n\n      var options = this.options;\n\n\n      var validPointers = input.pointers.length === options.pointers;\n      var validMovement = input.distance < options.threshold;\n      var validTouchTime = input.deltaTime < options.time;\n\n      this.reset();\n\n      if (input.eventType & INPUT_START && this.count === 0) {\n        return this.failTimeout();\n      }\n\n      // we only allow little movement\n      // and we've reached an end event, so a tap is possible\n      if (validMovement && validTouchTime && validPointers) {\n        if (input.eventType !== INPUT_END) {\n          return this.failTimeout();\n        }\n\n        var validInterval = this.pTime ? input.timeStamp - this.pTime < options.interval : true;\n        var validMultiTap = !this.pCenter || getDistance(this.pCenter, input.center) < options.posThreshold;\n\n        this.pTime = input.timeStamp;\n        this.pCenter = input.center;\n\n        if (!validMultiTap || !validInterval) {\n          this.count = 1;\n        } else {\n          this.count += 1;\n        }\n\n        this._input = input;\n\n        // if tap count matches we have recognized it,\n        // else it has began recognizing...\n        var tapCount = this.count % options.taps;\n        if (tapCount === 0) {\n          // no failing requirements, immediately trigger the tap event\n          // or wait as long as the multitap interval to trigger\n          if (!this.hasRequireFailures()) {\n            return STATE_RECOGNIZED;\n          } else {\n            this._timer = setTimeoutContext(function () {\n              _this2.state = STATE_RECOGNIZED;\n              _this2.tryEmit();\n            }, options.interval, this);\n            return STATE_BEGAN;\n          }\n        }\n      }\n      return STATE_FAILED;\n    }\n  }, {\n    key: 'failTimeout',\n    value: function failTimeout() {\n      var _this3 = this;\n\n      this._timer = setTimeoutContext(function () {\n        _this3.state = STATE_FAILED;\n      }, this.options.interval, this);\n      return STATE_FAILED;\n    }\n  }, {\n    key: 'reset',\n    value: function reset() {\n      clearTimeout(this._timer);\n    }\n  }, {\n    key: 'emit',\n    value: function emit() {\n      if (this.state === STATE_RECOGNIZED) {\n        this._input.tapCount = this.count;\n        this.manager.emit(this.options.event, this._input);\n      }\n    }\n  }]);\n  return TapRecognizer;\n}(Recognizer);\n\nTapRecognizer.prototype.defaults = {\n  event: 'tap',\n  pointers: 1,\n  taps: 1,\n  interval: 300, // max time between the multi-tap taps\n  time: 250, // max time of the pointer to be down (like finger on the screen)\n  threshold: 9, // a minimal movement is ok, but keep it low\n  posThreshold: 10 // a multi-tap can be a bit off the initial position\n};\n\n/**\n * @private\n * Press\n * Recognized when the pointer is down for x ms without any movement.\n * @constructor\n * @extends Recognizer\n */\n\nvar PressRecognizer = function (_Recognizer) {\n  inherits(PressRecognizer, _Recognizer);\n\n  function PressRecognizer() {\n    classCallCheck(this, PressRecognizer);\n\n    var _this = possibleConstructorReturn(this, (PressRecognizer.__proto__ || Object.getPrototypeOf(PressRecognizer)).apply(this, arguments));\n\n    _this._timer = null;\n    _this._input = null;\n    return _this;\n  }\n\n  createClass(PressRecognizer, [{\n    key: 'getTouchAction',\n    value: function getTouchAction() {\n      return [TOUCH_ACTION_AUTO];\n    }\n  }, {\n    key: 'process',\n    value: function process(input) {\n      var _this2 = this;\n\n      var options = this.options;\n\n      var validPointers = input.pointers.length === options.pointers;\n      var validMovement = input.distance < options.threshold;\n      var validTime = input.deltaTime > options.time;\n\n      this._input = input;\n\n      // we only allow little movement\n      // and we've reached an end event, so a tap is possible\n      if (!validMovement || !validPointers || input.eventType & (INPUT_END | INPUT_CANCEL) && !validTime) {\n        this.reset();\n      } else if (input.eventType & INPUT_START) {\n        this.reset();\n        this._timer = setTimeoutContext(function () {\n          _this2.state = STATE_RECOGNIZED;\n          _this2.tryEmit();\n        }, options.time, this);\n      } else if (input.eventType & INPUT_END) {\n        return STATE_RECOGNIZED;\n      }\n      return STATE_FAILED;\n    }\n  }, {\n    key: 'reset',\n    value: function reset() {\n      clearTimeout(this._timer);\n    }\n  }, {\n    key: 'emit',\n    value: function emit(input) {\n      if (this.state !== STATE_RECOGNIZED) {\n        return;\n      }\n\n      if (input && input.eventType & INPUT_END) {\n        this.manager.emit(this.options.event + 'up', input);\n      } else {\n        this._input.timeStamp = now();\n        this.manager.emit(this.options.event, this._input);\n      }\n    }\n  }]);\n  return PressRecognizer;\n}(Recognizer);\n\nPressRecognizer.prototype.defaults = {\n  event: 'press',\n  pointers: 1,\n  time: 251, // minimal time of the pointer to be pressed\n  threshold: 9 // a minimal movement is ok, but keep it low\n};\n\n/**\n * @private\n * small indexOf wrapper\n * @param {String} str\n * @param {String} find\n * @returns {Boolean} found\n */\nfunction inStr(str, find) {\n  return str.indexOf(find) > -1;\n}\n\n/**\n * @private\n * when the touchActions are collected they are not a valid value, so we need to clean things up. *\n * @param {String} actions\n * @returns {*}\n */\nfunction cleanTouchActions(actions) {\n  // none\n  if (inStr(actions, TOUCH_ACTION_NONE)) {\n    return TOUCH_ACTION_NONE;\n  }\n\n  var hasPanX = inStr(actions, TOUCH_ACTION_PAN_X);\n  var hasPanY = inStr(actions, TOUCH_ACTION_PAN_Y);\n\n  // if both pan-x and pan-y are set (different recognizers\n  // for different directions, e.g. horizontal pan but vertical swipe?)\n  // we need none (as otherwise with pan-x pan-y combined none of these\n  // recognizers will work, since the browser would handle all panning\n  if (hasPanX && hasPanY) {\n    return TOUCH_ACTION_NONE;\n  }\n\n  // pan-x OR pan-y\n  if (hasPanX || hasPanY) {\n    return hasPanX ? TOUCH_ACTION_PAN_X : TOUCH_ACTION_PAN_Y;\n  }\n\n  // manipulation\n  if (inStr(actions, TOUCH_ACTION_MANIPULATION)) {\n    return TOUCH_ACTION_MANIPULATION;\n  }\n\n  return TOUCH_ACTION_AUTO;\n}\n\n/**\n * @private\n * Touch Action\n * sets the touchAction property or uses the js alternative\n * @param {Manager} manager\n * @param {String} value\n * @constructor\n */\n\nvar TouchAction = function () {\n  function TouchAction(manager, value) {\n    classCallCheck(this, TouchAction);\n\n    this.manager = manager;\n    this.set(value);\n  }\n\n  /**\n   * @private\n   * set the touchAction value on the element or enable the polyfill\n   * @param {String} value\n   */\n\n\n  createClass(TouchAction, [{\n    key: 'set',\n    value: function set(value) {\n      // find out the touch-action by the event handlers\n      if (value === TOUCH_ACTION_COMPUTE) {\n        value = this.compute();\n      }\n\n      if (NATIVE_TOUCH_ACTION && this.manager.element.style && TOUCH_ACTION_MAP[value]) {\n        this.manager.element.style[PREFIXED_TOUCH_ACTION] = value;\n      }\n      this.actions = value.toLowerCase().trim();\n    }\n\n    /**\n     * @private\n     * just re-set the touchAction value\n     */\n\n  }, {\n    key: 'update',\n    value: function update() {\n      this.set(this.manager.options.touchAction);\n    }\n\n    /**\n     * @private\n     * compute the value for the touchAction property based on the recognizer's settings\n     * @returns {String} value\n     */\n\n  }, {\n    key: 'compute',\n    value: function compute() {\n      var actions = [];\n      each(this.manager.recognizers, function (recognizer) {\n        if (boolOrFn(recognizer.options.enable, [recognizer])) {\n          actions = actions.concat(recognizer.getTouchAction());\n        }\n      });\n      return cleanTouchActions(actions.join(' '));\n    }\n\n    /**\n     * @private\n     * this method is called on each input cycle and provides the preventing of the browser behavior\n     * @param {Object} input\n     */\n\n  }, {\n    key: 'preventDefaults',\n    value: function preventDefaults(input) {\n      var srcEvent = input.srcEvent;\n\n      var direction = input.offsetDirection;\n\n      // if the touch action did prevented once this session\n      if (this.manager.session.prevented) {\n        srcEvent.preventDefault();\n        return;\n      }\n\n      var actions = this.actions;\n\n      var hasNone = inStr(actions, TOUCH_ACTION_NONE) && !TOUCH_ACTION_MAP[TOUCH_ACTION_NONE];\n      var hasPanY = inStr(actions, TOUCH_ACTION_PAN_Y) && !TOUCH_ACTION_MAP[TOUCH_ACTION_PAN_Y];\n      var hasPanX = inStr(actions, TOUCH_ACTION_PAN_X) && !TOUCH_ACTION_MAP[TOUCH_ACTION_PAN_X];\n\n      if (hasNone) {\n        // do not prevent defaults if this is a tap gesture\n        var isTapPointer = input.pointers.length === 1;\n        var isTapMovement = input.distance < 2;\n        var isTapTouchTime = input.deltaTime < 250;\n\n        if (isTapPointer && isTapMovement && isTapTouchTime) {\n          return;\n        }\n      }\n\n      if (hasPanX && hasPanY) {\n        // `pan-x pan-y` means browser handles all scrolling/panning, do not prevent\n        return;\n      }\n\n      if (hasNone || hasPanY && direction & DIRECTION_HORIZONTAL || hasPanX && direction & DIRECTION_VERTICAL) {\n        return this.preventSrc(srcEvent);\n      }\n    }\n\n    /**\n     * @private\n     * call preventDefault to prevent the browser's default behavior (scrolling in most cases)\n     * @param {Object} srcEvent\n     */\n\n  }, {\n    key: 'preventSrc',\n    value: function preventSrc(srcEvent) {\n      this.manager.session.prevented = true;\n      srcEvent.preventDefault();\n    }\n  }]);\n  return TouchAction;\n}();\n\n/**\n * @private\n * find if a node is in the given parent\n * @method hasParent\n * @param {HTMLElement} node\n * @param {HTMLElement} parent\n * @return {Boolean} found\n */\nfunction hasParent(node, parent) {\n  while (node) {\n    if (node === parent) {\n      return true;\n    }\n    node = node.parentNode;\n  }\n  return false;\n}\n\n/**\n * @private\n * get the center of all the pointers\n * @param {Array} pointers\n * @return {Object} center contains `x` and `y` properties\n */\nfunction getCenter(pointers) {\n  var pointersLength = pointers.length;\n\n  // no need to loop when only one touch\n  if (pointersLength === 1) {\n    return {\n      x: round(pointers[0].clientX),\n      y: round(pointers[0].clientY)\n    };\n  }\n\n  var x = 0;\n  var y = 0;\n  var i = 0;\n  while (i < pointersLength) {\n    x += pointers[i].clientX;\n    y += pointers[i].clientY;\n    i++;\n  }\n\n  return {\n    x: round(x / pointersLength),\n    y: round(y / pointersLength)\n  };\n}\n\n/**\n * @private\n * create a simple clone from the input used for storage of firstInput and firstMultiple\n * @param {Object} input\n * @returns {Object} clonedInputData\n */\nfunction simpleCloneInputData(input) {\n  // make a simple copy of the pointers because we will get a reference if we don't\n  // we only need clientXY for the calculations\n  var pointers = [];\n  var i = 0;\n  while (i < input.pointers.length) {\n    pointers[i] = {\n      clientX: round(input.pointers[i].clientX),\n      clientY: round(input.pointers[i].clientY)\n    };\n    i++;\n  }\n\n  return {\n    timeStamp: now(),\n    pointers: pointers,\n    center: getCenter(pointers),\n    deltaX: input.deltaX,\n    deltaY: input.deltaY\n  };\n}\n\n/**\n * @private\n * calculate the angle between two coordinates\n * @param {Object} p1\n * @param {Object} p2\n * @param {Array} [props] containing x and y keys\n * @return {Number} angle\n */\nfunction getAngle(p1, p2, props) {\n  if (!props) {\n    props = PROPS_XY;\n  }\n  var x = p2[props[0]] - p1[props[0]];\n  var y = p2[props[1]] - p1[props[1]];\n  return Math.atan2(y, x) * 180 / Math.PI;\n}\n\n/**\n * @private\n * get the direction between two points\n * @param {Number} x\n * @param {Number} y\n * @return {Number} direction\n */\nfunction getDirection(x, y) {\n  if (x === y) {\n    return DIRECTION_NONE;\n  }\n\n  if (abs(x) >= abs(y)) {\n    return x < 0 ? DIRECTION_LEFT : DIRECTION_RIGHT;\n  }\n  return y < 0 ? DIRECTION_UP : DIRECTION_DOWN;\n}\n\nfunction computeDeltaXY(session, input) {\n  var center = input.center;\n  // let { offsetDelta:offset = {}, prevDelta = {}, prevInput = {} } = session;\n  // jscs throwing error on defalut destructured values and without defaults tests fail\n\n  var offset = session.offsetDelta || {};\n  var prevDelta = session.prevDelta || {};\n  var prevInput = session.prevInput || {};\n\n  if (input.eventType === INPUT_START || prevInput.eventType === INPUT_END) {\n    prevDelta = session.prevDelta = {\n      x: prevInput.deltaX || 0,\n      y: prevInput.deltaY || 0\n    };\n\n    offset = session.offsetDelta = {\n      x: center.x,\n      y: center.y\n    };\n  }\n\n  input.deltaX = prevDelta.x + (center.x - offset.x);\n  input.deltaY = prevDelta.y + (center.y - offset.y);\n}\n\n/**\n * @private\n * calculate the velocity between two points. unit is in px per ms.\n * @param {Number} deltaTime\n * @param {Number} x\n * @param {Number} y\n * @return {Object} velocity `x` and `y`\n */\nfunction getVelocity(deltaTime, x, y) {\n  return {\n    x: x / deltaTime || 0,\n    y: y / deltaTime || 0\n  };\n}\n\n/**\n * @private\n * calculate the scale factor between two pointersets\n * no scale is 1, and goes down to 0 when pinched together, and bigger when pinched out\n * @param {Array} start array of pointers\n * @param {Array} end array of pointers\n * @return {Number} scale\n */\nfunction getScale(start, end) {\n  return getDistance(end[0], end[1], PROPS_CLIENT_XY) / getDistance(start[0], start[1], PROPS_CLIENT_XY);\n}\n\n/**\n * @private\n * calculate the rotation degrees between two pointersets\n * @param {Array} start array of pointers\n * @param {Array} end array of pointers\n * @return {Number} rotation\n */\nfunction getRotation(start, end) {\n  return getAngle(end[1], end[0], PROPS_CLIENT_XY) + getAngle(start[1], start[0], PROPS_CLIENT_XY);\n}\n\n/**\n * @private\n * velocity is calculated every x ms\n * @param {Object} session\n * @param {Object} input\n */\nfunction computeIntervalInputData(session, input) {\n  var last = session.lastInterval || input;\n  var deltaTime = input.timeStamp - last.timeStamp;\n  var velocity = void 0;\n  var velocityX = void 0;\n  var velocityY = void 0;\n  var direction = void 0;\n\n  if (input.eventType !== INPUT_CANCEL && (deltaTime > COMPUTE_INTERVAL || last.velocity === undefined)) {\n    var deltaX = input.deltaX - last.deltaX;\n    var deltaY = input.deltaY - last.deltaY;\n\n    var v = getVelocity(deltaTime, deltaX, deltaY);\n    velocityX = v.x;\n    velocityY = v.y;\n    velocity = abs(v.x) > abs(v.y) ? v.x : v.y;\n    direction = getDirection(deltaX, deltaY);\n\n    session.lastInterval = input;\n  } else {\n    // use latest velocity info if it doesn't overtake a minimum period\n    velocity = last.velocity;\n    velocityX = last.velocityX;\n    velocityY = last.velocityY;\n    direction = last.direction;\n  }\n\n  input.velocity = velocity;\n  input.velocityX = velocityX;\n  input.velocityY = velocityY;\n  input.direction = direction;\n}\n\n/**\n* @private\n * extend the data with some usable properties like scale, rotate, velocity etc\n * @param {Object} manager\n * @param {Object} input\n */\nfunction computeInputData(manager, input) {\n  var session = manager.session;\n  var pointers = input.pointers;\n  var pointersLength = pointers.length;\n\n  // store the first input to calculate the distance and direction\n\n  if (!session.firstInput) {\n    session.firstInput = simpleCloneInputData(input);\n  }\n\n  // to compute scale and rotation we need to store the multiple touches\n  if (pointersLength > 1 && !session.firstMultiple) {\n    session.firstMultiple = simpleCloneInputData(input);\n  } else if (pointersLength === 1) {\n    session.firstMultiple = false;\n  }\n\n  var firstInput = session.firstInput;\n  var firstMultiple = session.firstMultiple;\n\n  var offsetCenter = firstMultiple ? firstMultiple.center : firstInput.center;\n\n  var center = input.center = getCenter(pointers);\n  input.timeStamp = now();\n  input.deltaTime = input.timeStamp - firstInput.timeStamp;\n\n  input.angle = getAngle(offsetCenter, center);\n  input.distance = getDistance(offsetCenter, center);\n\n  computeDeltaXY(session, input);\n  input.offsetDirection = getDirection(input.deltaX, input.deltaY);\n\n  var overallVelocity = getVelocity(input.deltaTime, input.deltaX, input.deltaY);\n  input.overallVelocityX = overallVelocity.x;\n  input.overallVelocityY = overallVelocity.y;\n  input.overallVelocity = abs(overallVelocity.x) > abs(overallVelocity.y) ? overallVelocity.x : overallVelocity.y;\n\n  input.scale = firstMultiple ? getScale(firstMultiple.pointers, pointers) : 1;\n  input.rotation = firstMultiple ? getRotation(firstMultiple.pointers, pointers) : 0;\n\n  input.maxPointers = !session.prevInput ? input.pointers.length : input.pointers.length > session.prevInput.maxPointers ? input.pointers.length : session.prevInput.maxPointers;\n\n  computeIntervalInputData(session, input);\n\n  // find the correct target\n  var target = manager.element;\n  if (hasParent(input.srcEvent.target, target)) {\n    target = input.srcEvent.target;\n  }\n  input.target = target;\n}\n\n/**\n * @private\n * handle input events\n * @param {Manager} manager\n * @param {String} eventType\n * @param {Object} input\n */\nfunction inputHandler(manager, eventType, input) {\n  var pointersLen = input.pointers.length;\n  var changedPointersLen = input.changedPointers.length;\n  var isFirst = eventType & INPUT_START && pointersLen - changedPointersLen === 0;\n  var isFinal = eventType & (INPUT_END | INPUT_CANCEL) && pointersLen - changedPointersLen === 0;\n\n  input.isFirst = !!isFirst;\n  input.isFinal = !!isFinal;\n\n  if (isFirst) {\n    manager.session = {};\n  }\n\n  // source event is the normalized value of the domEvents\n  // like 'touchstart, mouseup, pointerdown'\n  input.eventType = eventType;\n\n  // compute scale, rotation etc\n  computeInputData(manager, input);\n\n  // emit secret event\n  manager.emit('hammer.input', input);\n\n  manager.recognize(input);\n  manager.session.prevInput = input;\n}\n\n/**\n * @private\n * split string on whitespace\n * @param {String} str\n * @returns {Array} words\n */\n\nfunction splitStr(str) {\n  return str.trim().split(/\\s+/g);\n}\n\n/**\n * @private\n * addEventListener with multiple events at once\n * @param {EventTarget} target\n * @param {String} types\n * @param {Function} handler\n */\nfunction addEventListeners(target, types, handler) {\n  each(splitStr(types), function (type) {\n    target.addEventListener(type, handler, false);\n  });\n}\n\n/**\n * @private\n * removeEventListener with multiple events at once\n * @param {EventTarget} target\n * @param {String} types\n * @param {Function} handler\n */\nfunction removeEventListeners(target, types, handler) {\n  each(splitStr(types), function (type) {\n    target.removeEventListener(type, handler, false);\n  });\n}\n\n/**\n * @private\n * get the window object of an element\n * @param {HTMLElement} element\n * @returns {DocumentView|Window}\n */\nfunction getWindowForElement(element) {\n  var doc = element.ownerDocument || element;\n  return doc.defaultView || doc.parentWindow || window;\n}\n\n/**\n * @private\n * create new input type manager\n * @param {Manager} manager\n * @param {Function} callback\n * @returns {Input}\n * @constructor\n */\n\nvar Input = function () {\n  function Input(manager, callback) {\n    classCallCheck(this, Input);\n\n    var self = this;\n    this.manager = manager;\n    this.callback = callback;\n    this.element = manager.element;\n    this.target = manager.options.inputTarget;\n\n    // smaller wrapper around the handler, for the scope and the enabled state of the manager,\n    // so when disabled the input events are completely bypassed.\n    this.domHandler = function (ev) {\n      if (boolOrFn(manager.options.enable, [manager])) {\n        self.handler(ev);\n      }\n    };\n\n    this.init();\n  }\n  /**\n   * @private\n   * should handle the inputEvent data and trigger the callback\n   * @virtual\n   */\n\n\n  createClass(Input, [{\n    key: 'handler',\n    value: function handler() {}\n\n    /**\n     * @private\n     * bind the events\n     */\n\n  }, {\n    key: 'init',\n    value: function init() {\n      this.evEl && addEventListeners(this.element, this.evEl, this.domHandler);\n      this.evTarget && addEventListeners(this.target, this.evTarget, this.domHandler);\n      this.evWin && addEventListeners(getWindowForElement(this.element), this.evWin, this.domHandler);\n    }\n\n    /**\n     * @private\n     * unbind the events\n     */\n\n  }, {\n    key: 'destroy',\n    value: function destroy() {\n      this.evEl && removeEventListeners(this.element, this.evEl, this.domHandler);\n      this.evTarget && removeEventListeners(this.target, this.evTarget, this.domHandler);\n      this.evWin && removeEventListeners(getWindowForElement(this.element), this.evWin, this.domHandler);\n    }\n  }]);\n  return Input;\n}();\n\nvar POINTER_INPUT_MAP = {\n  pointerdown: INPUT_START,\n  pointermove: INPUT_MOVE,\n  pointerup: INPUT_END,\n  pointercancel: INPUT_CANCEL,\n  pointerout: INPUT_CANCEL\n};\n\n// in IE10 the pointer types is defined as an enum\nvar IE10_POINTER_TYPE_ENUM = {\n  2: INPUT_TYPE_TOUCH,\n  3: INPUT_TYPE_PEN,\n  4: INPUT_TYPE_MOUSE,\n  5: INPUT_TYPE_KINECT // see https://twitter.com/jacobrossi/status/480596438489890816\n};\n\nvar POINTER_ELEMENT_EVENTS = 'pointerdown';\nvar POINTER_WINDOW_EVENTS = 'pointermove pointerup pointercancel';\n\n// IE10 has prefixed support, and case-sensitive\nif (window.MSPointerEvent && !window.PointerEvent) {\n  POINTER_ELEMENT_EVENTS = 'MSPointerDown';\n  POINTER_WINDOW_EVENTS = 'MSPointerMove MSPointerUp MSPointerCancel';\n}\n\n/**\n * @private\n * Pointer events input\n * @constructor\n * @extends Input\n */\n\nvar PointerEventInput = function (_Input) {\n  inherits(PointerEventInput, _Input);\n\n  function PointerEventInput() {\n    classCallCheck(this, PointerEventInput);\n\n    var _this = possibleConstructorReturn(this, (PointerEventInput.__proto__ || Object.getPrototypeOf(PointerEventInput)).apply(this, arguments));\n\n    _this.evEl = POINTER_ELEMENT_EVENTS;\n    _this.evWin = POINTER_WINDOW_EVENTS;\n\n    _this.store = _this.manager.session.pointerEvents = [];\n    return _this;\n  }\n\n  /**\n   * @private\n   * handle mouse events\n   * @param {Object} ev\n   */\n\n\n  createClass(PointerEventInput, [{\n    key: 'handler',\n    value: function handler(ev) {\n      var store = this.store;\n\n      var removePointer = false;\n\n      var eventTypeNormalized = ev.type.toLowerCase().replace('ms', '');\n      var eventType = POINTER_INPUT_MAP[eventTypeNormalized];\n      var pointerType = IE10_POINTER_TYPE_ENUM[ev.pointerType] || ev.pointerType;\n\n      var isTouch = pointerType === INPUT_TYPE_TOUCH;\n\n      // get index of the event in the store\n      var storeIndex = inArray(store, ev.pointerId, 'pointerId');\n\n      // start and mouse must be down\n      if (eventType & INPUT_START && (ev.button === 0 || isTouch)) {\n        if (storeIndex < 0) {\n          store.push(ev);\n          storeIndex = store.length - 1;\n        }\n      } else if (eventType & (INPUT_END | INPUT_CANCEL)) {\n        removePointer = true;\n      }\n\n      // it not found, so the pointer hasn't been down (so it's probably a hover)\n      if (storeIndex < 0) {\n        return;\n      }\n\n      // update the event in the store\n      store[storeIndex] = ev;\n\n      this.callback(this.manager, eventType, {\n        pointers: store,\n        changedPointers: [ev],\n        pointerType: pointerType,\n        srcEvent: ev\n      });\n\n      if (removePointer) {\n        // remove from the store\n        store.splice(storeIndex, 1);\n      }\n    }\n  }]);\n  return PointerEventInput;\n}(Input);\n\n/**\n * @private\n * convert array-like objects to real arrays\n * @param {Object} obj\n * @returns {Array}\n */\nfunction toArray$1(obj) {\n  return Array.prototype.slice.call(obj, 0);\n}\n\n/**\n * @private\n * unique array with objects based on a key (like 'id') or just by the array's value\n * @param {Array} src [{id:1},{id:2},{id:1}]\n * @param {String} [key]\n * @param {Boolean} [sort=False]\n * @returns {Array} [{id:1},{id:2}]\n */\nfunction uniqueArray(src, key, sort) {\n  var results = [];\n  var values = [];\n  var i = 0;\n\n  while (i < src.length) {\n    var val = key ? src[i][key] : src[i];\n    if (inArray(values, val) < 0) {\n      results.push(src[i]);\n    }\n    values[i] = val;\n    i++;\n  }\n\n  if (sort) {\n    if (!key) {\n      results = results.sort();\n    } else {\n      results = results.sort(function (a, b) {\n        return a[key] > b[key];\n      });\n    }\n  }\n\n  return results;\n}\n\nvar TOUCH_INPUT_MAP = {\n  touchstart: INPUT_START,\n  touchmove: INPUT_MOVE,\n  touchend: INPUT_END,\n  touchcancel: INPUT_CANCEL\n};\n\nvar TOUCH_TARGET_EVENTS = 'touchstart touchmove touchend touchcancel';\n\n/**\n * @private\n * Multi-user touch events input\n * @constructor\n * @extends Input\n */\n\nvar TouchInput = function (_Input) {\n  inherits(TouchInput, _Input);\n\n  function TouchInput() {\n    classCallCheck(this, TouchInput);\n\n    TouchInput.prototype.evTarget = TOUCH_TARGET_EVENTS;\n    TouchInput.prototype.targetIds = {};\n\n    var _this = possibleConstructorReturn(this, (TouchInput.__proto__ || Object.getPrototypeOf(TouchInput)).apply(this, arguments));\n\n    _this.evTarget = TOUCH_TARGET_EVENTS;\n    _this.targetIds = {};\n    return _this;\n  }\n\n  createClass(TouchInput, [{\n    key: 'handler',\n    value: function handler(ev) {\n      var type = TOUCH_INPUT_MAP[ev.type];\n      var touches = getTouches.call(this, ev, type);\n      if (!touches) {\n        return;\n      }\n\n      this.callback(this.manager, type, {\n        pointers: touches[0],\n        changedPointers: touches[1],\n        pointerType: INPUT_TYPE_TOUCH,\n        srcEvent: ev\n      });\n    }\n  }]);\n  return TouchInput;\n}(Input);\n\nfunction getTouches(ev, type) {\n  var allTouches = toArray$1(ev.touches);\n  var targetIds = this.targetIds;\n\n  // when there is only one touch, the process can be simplified\n\n  if (type & (INPUT_START | INPUT_MOVE) && allTouches.length === 1) {\n    targetIds[allTouches[0].identifier] = true;\n    return [allTouches, allTouches];\n  }\n\n  var i = void 0;\n  var targetTouches = void 0;\n  var changedTouches = toArray$1(ev.changedTouches);\n  var changedTargetTouches = [];\n  var target = this.target;\n\n  // get target touches from touches\n\n  targetTouches = allTouches.filter(function (touch) {\n    return hasParent(touch.target, target);\n  });\n\n  // collect touches\n  if (type === INPUT_START) {\n    i = 0;\n    while (i < targetTouches.length) {\n      targetIds[targetTouches[i].identifier] = true;\n      i++;\n    }\n  }\n\n  // filter changed touches to only contain touches that exist in the collected target ids\n  i = 0;\n  while (i < changedTouches.length) {\n    if (targetIds[changedTouches[i].identifier]) {\n      changedTargetTouches.push(changedTouches[i]);\n    }\n\n    // cleanup removed touches\n    if (type & (INPUT_END | INPUT_CANCEL)) {\n      delete targetIds[changedTouches[i].identifier];\n    }\n    i++;\n  }\n\n  if (!changedTargetTouches.length) {\n    return;\n  }\n\n  return [\n  // merge targetTouches with changedTargetTouches so it contains ALL touches, including 'end' and 'cancel'\n  uniqueArray(targetTouches.concat(changedTargetTouches), 'identifier', true), changedTargetTouches];\n}\n\nvar MOUSE_INPUT_MAP = {\n  mousedown: INPUT_START,\n  mousemove: INPUT_MOVE,\n  mouseup: INPUT_END\n};\n\nvar MOUSE_ELEMENT_EVENTS = 'mousedown';\nvar MOUSE_WINDOW_EVENTS = 'mousemove mouseup';\n\n/**\n * @private\n * Mouse events input\n * @constructor\n * @extends Input\n */\n\nvar MouseInput = function (_Input) {\n  inherits(MouseInput, _Input);\n\n  function MouseInput() {\n    classCallCheck(this, MouseInput);\n\n    var _this = possibleConstructorReturn(this, (MouseInput.__proto__ || Object.getPrototypeOf(MouseInput)).apply(this, arguments));\n\n    _this.evEl = MOUSE_ELEMENT_EVENTS;\n    _this.evWin = MOUSE_WINDOW_EVENTS;\n\n    _this.pressed = false; // mousedown state\n    return _this;\n  }\n\n  /**\n   * @private\n   * handle mouse events\n   * @param {Object} ev\n   */\n\n\n  createClass(MouseInput, [{\n    key: 'handler',\n    value: function handler(ev) {\n      var eventType = MOUSE_INPUT_MAP[ev.type];\n\n      // on start we want to have the left mouse button down\n      if (eventType & INPUT_START && ev.button === 0) {\n        this.pressed = true;\n      }\n\n      if (eventType & INPUT_MOVE && ev.which !== 1) {\n        eventType = INPUT_END;\n      }\n\n      // mouse must be down\n      if (!this.pressed) {\n        return;\n      }\n\n      if (eventType & INPUT_END) {\n        this.pressed = false;\n      }\n\n      this.callback(this.manager, eventType, {\n        pointers: [ev],\n        changedPointers: [ev],\n        pointerType: INPUT_TYPE_MOUSE,\n        srcEvent: ev\n      });\n    }\n  }]);\n  return MouseInput;\n}(Input);\n\n/**\n * @private\n * Combined touch and mouse input\n *\n * Touch has a higher priority then mouse, and while touching no mouse events are allowed.\n * This because touch devices also emit mouse events while doing a touch.\n *\n * @constructor\n * @extends Input\n */\n\nvar DEDUP_TIMEOUT = 2500;\nvar DEDUP_DISTANCE = 25;\n\nvar TouchMouseInput = function (_Input) {\n  inherits(TouchMouseInput, _Input);\n\n  function TouchMouseInput() {\n    classCallCheck(this, TouchMouseInput);\n\n    var _this = possibleConstructorReturn(this, (TouchMouseInput.__proto__ || Object.getPrototypeOf(TouchMouseInput)).apply(this, arguments));\n\n    var handler = bindFn(_this.handler, _this);\n    _this.touch = new TouchInput(_this.manager, handler);\n    _this.mouse = new MouseInput(_this.manager, handler);\n\n    _this.primaryTouch = null;\n    _this.lastTouches = [];\n    return _this;\n  }\n\n  /**\n   * @private\n   * handle mouse and touch events\n   * @param {Hammer} manager\n   * @param {String} inputEvent\n   * @param {Object} inputData\n   */\n\n\n  createClass(TouchMouseInput, [{\n    key: 'handler',\n    value: function handler(manager, inputEvent, inputData) {\n      var isTouch = inputData.pointerType === INPUT_TYPE_TOUCH;\n      var isMouse = inputData.pointerType === INPUT_TYPE_MOUSE;\n\n      if (isMouse && inputData.sourceCapabilities && inputData.sourceCapabilities.firesTouchEvents) {\n        return;\n      }\n\n      // when we're in a touch event, record touches to  de-dupe synthetic mouse event\n      if (isTouch) {\n        recordTouches.call(this, inputEvent, inputData);\n      } else if (isMouse && isSyntheticEvent.call(this, inputData)) {\n        return;\n      }\n\n      this.callback(manager, inputEvent, inputData);\n    }\n\n    /**\n     * @private\n     * remove the event listeners\n     */\n\n  }, {\n    key: 'destroy',\n    value: function destroy() {\n      this.touch.destroy();\n      this.mouse.destroy();\n    }\n  }]);\n  return TouchMouseInput;\n}(Input);\n\nfunction recordTouches(eventType, eventData) {\n  if (eventType & INPUT_START) {\n    this.primaryTouch = eventData.changedPointers[0].identifier;\n    setLastTouch.call(this, eventData);\n  } else if (eventType & (INPUT_END | INPUT_CANCEL)) {\n    setLastTouch.call(this, eventData);\n  }\n}\n\nfunction setLastTouch(eventData) {\n  var _this2 = this;\n\n  var _eventData$changedPoi = slicedToArray(eventData.changedPointers, 1);\n\n  var touch = _eventData$changedPoi[0];\n\n  if (touch.identifier === this.primaryTouch) {\n    (function () {\n      var lastTouch = { x: touch.clientX, y: touch.clientY };\n      _this2.lastTouches.push(lastTouch);\n      var lts = _this2.lastTouches;\n      var removeLastTouch = function removeLastTouch() {\n        var i = lts.indexOf(lastTouch);\n        if (i > -1) {\n          lts.splice(i, 1);\n        }\n      };\n      setTimeout(removeLastTouch, DEDUP_TIMEOUT);\n    })();\n  }\n}\n\nfunction isSyntheticEvent(eventData) {\n  var x = eventData.srcEvent.clientX;\n  var y = eventData.srcEvent.clientY;\n  for (var i = 0; i < this.lastTouches.length; i++) {\n    var t = this.lastTouches[i];\n    var dx = Math.abs(x - t.x);\n    var dy = Math.abs(y - t.y);\n    if (dx <= DEDUP_DISTANCE && dy <= DEDUP_DISTANCE) {\n      return true;\n    }\n  }\n  return false;\n}\n\n/**\n * @private\n * create new input type manager\n * called by the Manager constructor\n * @param {Hammer} manager\n * @returns {Input}\n */\nfunction createInputInstance(manager) {\n  var Type = void 0;\n  // let inputClass = manager.options.inputClass;\n  var inputClass = manager.options.inputClass;\n\n  if (inputClass) {\n    Type = inputClass;\n  } else if (SUPPORT_POINTER_EVENTS) {\n    Type = PointerEventInput;\n  } else if (SUPPORT_ONLY_TOUCH) {\n    Type = TouchInput;\n  } else if (!SUPPORT_TOUCH) {\n    Type = MouseInput;\n  } else {\n    Type = TouchMouseInput;\n  }\n  return new Type(manager, inputHandler);\n}\n\nvar STOP = 1;\nvar FORCED_STOP = 2;\n\n/**\n* @private\n * Manager\n * @param {HTMLElement} element\n * @param {Object} [options]\n * @constructor\n */\n\nvar Manager = function () {\n  function Manager(element, options) {\n    var _this = this;\n\n    classCallCheck(this, Manager);\n\n    this.options = assign$1({}, Hammer.defaults, options || {});\n\n    this.options.inputTarget = this.options.inputTarget || element;\n\n    this.handlers = {};\n    this.session = {};\n    this.recognizers = [];\n    this.oldCssProps = {};\n\n    this.element = element;\n    this.input = createInputInstance(this);\n    this.touchAction = new TouchAction(this, this.options.touchAction);\n\n    toggleCssProps(this, true);\n\n    each(this.options.recognizers, function (item) {\n      var recognizer = _this.add(new item[0](item[1]));\n      item[2] && recognizer.recognizeWith(item[2]);\n      item[3] && recognizer.requireFailure(item[3]);\n    }, this);\n  }\n\n  /**\n   * @private\n   * set options\n   * @param {Object} options\n   * @returns {Manager}\n   */\n\n\n  createClass(Manager, [{\n    key: 'set',\n    value: function set(options) {\n      assign$1(this.options, options);\n\n      // Options that need a little more setup\n      if (options.touchAction) {\n        this.touchAction.update();\n      }\n      if (options.inputTarget) {\n        // Clean up existing event listeners and reinitialize\n        this.input.destroy();\n        this.input.target = options.inputTarget;\n        this.input.init();\n      }\n      return this;\n    }\n\n    /**\n     * @private\n     * stop recognizing for this session.\n     * This session will be discarded, when a new [input]start event is fired.\n     * When forced, the recognizer cycle is stopped immediately.\n     * @param {Boolean} [force]\n     */\n\n  }, {\n    key: 'stop',\n    value: function stop(force) {\n      this.session.stopped = force ? FORCED_STOP : STOP;\n    }\n\n    /**\n     * @private\n     * run the recognizers!\n     * called by the inputHandler function on every movement of the pointers (touches)\n     * it walks through all the recognizers and tries to detect the gesture that is being made\n     * @param {Object} inputData\n     */\n\n  }, {\n    key: 'recognize',\n    value: function recognize(inputData) {\n      var session = this.session;\n\n      if (session.stopped) {\n        return;\n      }\n\n      // run the touch-action polyfill\n      this.touchAction.preventDefaults(inputData);\n\n      var recognizer = void 0;\n      var recognizers = this.recognizers;\n\n      // this holds the recognizer that is being recognized.\n      // so the recognizer's state needs to be BEGAN, CHANGED, ENDED or RECOGNIZED\n      // if no recognizer is detecting a thing, it is set to `null`\n\n      var curRecognizer = session.curRecognizer;\n\n      // reset when the last recognizer is recognized\n      // or when we're in a new session\n\n      if (!curRecognizer || curRecognizer && curRecognizer.state & STATE_RECOGNIZED) {\n        curRecognizer = session.curRecognizer = null;\n      }\n\n      var i = 0;\n      while (i < recognizers.length) {\n        recognizer = recognizers[i];\n\n        // find out if we are allowed try to recognize the input for this one.\n        // 1.   allow if the session is NOT forced stopped (see the .stop() method)\n        // 2.   allow if we still haven't recognized a gesture in this session, or the this recognizer is the one\n        //      that is being recognized.\n        // 3.   allow if the recognizer is allowed to run simultaneous with the current recognized recognizer.\n        //      this can be setup with the `recognizeWith()` method on the recognizer.\n        if (session.stopped !== FORCED_STOP && ( // 1\n        !curRecognizer || recognizer === curRecognizer || // 2\n        recognizer.canRecognizeWith(curRecognizer))) {\n          // 3\n          recognizer.recognize(inputData);\n        } else {\n          recognizer.reset();\n        }\n\n        // if the recognizer has been recognizing the input as a valid gesture, we want to store this one as the\n        // current active recognizer. but only if we don't already have an active recognizer\n        if (!curRecognizer && recognizer.state & (STATE_BEGAN | STATE_CHANGED | STATE_ENDED)) {\n          curRecognizer = session.curRecognizer = recognizer;\n        }\n        i++;\n      }\n    }\n\n    /**\n     * @private\n     * get a recognizer by its event name.\n     * @param {Recognizer|String} recognizer\n     * @returns {Recognizer|Null}\n     */\n\n  }, {\n    key: 'get',\n    value: function get(recognizer) {\n      if (recognizer instanceof Recognizer) {\n        return recognizer;\n      }\n\n      var recognizers = this.recognizers;\n\n      for (var i = 0; i < recognizers.length; i++) {\n        if (recognizers[i].options.event === recognizer) {\n          return recognizers[i];\n        }\n      }\n      return null;\n    }\n\n    /**\n     * @private add a recognizer to the manager\n     * existing recognizers with the same event name will be removed\n     * @param {Recognizer} recognizer\n     * @returns {Recognizer|Manager}\n     */\n\n  }, {\n    key: 'add',\n    value: function add(recognizer) {\n      if (invokeArrayArg(recognizer, 'add', this)) {\n        return this;\n      }\n\n      // remove existing\n      var existing = this.get(recognizer.options.event);\n      if (existing) {\n        this.remove(existing);\n      }\n\n      this.recognizers.push(recognizer);\n      recognizer.manager = this;\n\n      this.touchAction.update();\n      return recognizer;\n    }\n\n    /**\n     * @private\n     * remove a recognizer by name or instance\n     * @param {Recognizer|String} recognizer\n     * @returns {Manager}\n     */\n\n  }, {\n    key: 'remove',\n    value: function remove(recognizer) {\n      if (invokeArrayArg(recognizer, 'remove', this)) {\n        return this;\n      }\n\n      recognizer = this.get(recognizer);\n\n      // let's make sure this recognizer exists\n      if (recognizer) {\n        var recognizers = this.recognizers;\n\n        var index = inArray(recognizers, recognizer);\n\n        if (index !== -1) {\n          recognizers.splice(index, 1);\n          this.touchAction.update();\n        }\n      }\n\n      return this;\n    }\n\n    /**\n     * @private\n     * bind event\n     * @param {String} events\n     * @param {Function} handler\n     * @returns {EventEmitter} this\n     */\n\n  }, {\n    key: 'on',\n    value: function on(events, handler) {\n      if (events === undefined) {\n        return;\n      }\n      if (handler === undefined) {\n        return;\n      }\n\n      var handlers = this.handlers;\n\n      each(splitStr(events), function (event) {\n        handlers[event] = handlers[event] || [];\n        handlers[event].push(handler);\n      });\n      return this;\n    }\n\n    /**\n     * @private unbind event, leave emit blank to remove all handlers\n     * @param {String} events\n     * @param {Function} [handler]\n     * @returns {EventEmitter} this\n     */\n\n  }, {\n    key: 'off',\n    value: function off(events, handler) {\n      if (events === undefined) {\n        return;\n      }\n\n      var handlers = this.handlers;\n\n      each(splitStr(events), function (event) {\n        if (!handler) {\n          delete handlers[event];\n        } else {\n          handlers[event] && handlers[event].splice(inArray(handlers[event], handler), 1);\n        }\n      });\n      return this;\n    }\n\n    /**\n     * @private emit event to the listeners\n     * @param {String} event\n     * @param {Object} data\n     */\n\n  }, {\n    key: 'emit',\n    value: function emit(event, data) {\n      // we also want to trigger dom events\n      if (this.options.domEvents) {\n        triggerDomEvent(event, data);\n      }\n\n      // no handlers, so skip it all\n      var handlers = this.handlers[event] && this.handlers[event].slice();\n      if (!handlers || !handlers.length) {\n        return;\n      }\n\n      data.type = event;\n      data.preventDefault = function () {\n        data.srcEvent.preventDefault();\n      };\n\n      var i = 0;\n      while (i < handlers.length) {\n        handlers[i](data);\n        i++;\n      }\n    }\n\n    /**\n     * @private\n     * destroy the manager and unbinds all events\n     * it doesn't unbind dom events, that is the user own responsibility\n     */\n\n  }, {\n    key: 'destroy',\n    value: function destroy() {\n      this.element && toggleCssProps(this, false);\n\n      this.handlers = {};\n      this.session = {};\n      this.input.destroy();\n      this.element = null;\n    }\n  }]);\n  return Manager;\n}();\n\nfunction toggleCssProps(manager, add) {\n  var element = manager.element;\n\n  if (!element.style) {\n    return;\n  }\n  var prop = void 0;\n  each(manager.options.cssProps, function (value, name) {\n    prop = prefixed(element.style, name);\n    if (add) {\n      manager.oldCssProps[prop] = element.style[prop];\n      element.style[prop] = value;\n    } else {\n      element.style[prop] = manager.oldCssProps[prop] || '';\n    }\n  });\n  if (!add) {\n    manager.oldCssProps = {};\n  }\n}\n\n/**\n * @private\n * trigger dom event\n * @param {String} event\n * @param {Object} data\n */\nfunction triggerDomEvent(event, data) {\n  var gestureEvent = document.createEvent('Event');\n  gestureEvent.initEvent(event, true, true);\n  gestureEvent.gesture = data;\n  data.target.dispatchEvent(gestureEvent);\n}\n\n/**\n * @private\n * Simple way to create a manager with a default set of recognizers.\n * @param {HTMLElement} element\n * @param {Object} [options]\n * @constructor\n */\n\nvar Hammer = function Hammer(element, options) {\n  classCallCheck(this, Hammer);\n\n  options = options || {};\n  options.recognizers = ifUndefined(options.recognizers, Hammer.defaults.preset);\n  return new Manager(element, options);\n};\n\nHammer.VERSION = '2.0.8';\n\n/**\n * @private\n * default settings\n * @namespace\n */\nHammer.defaults = {\n  /**\n   * @private\n   * set if DOM events are being triggered.\n   * But this is slower and unused by simple implementations, so disabled by default.\n   * @type {Boolean}\n   * @default false\n   */\n  domEvents: false,\n\n  /**\n   * @private\n   * The value for the touchAction property/fallback.\n   * When set to `compute` it will magically set the correct value based on the added recognizers.\n   * @type {String}\n   * @default compute\n   */\n  touchAction: TOUCH_ACTION_COMPUTE,\n\n  /**\n   * @private\n   * @type {Boolean}\n   * @default true\n   */\n  enable: true,\n\n  /**\n   * @private\n   * EXPERIMENTAL FEATURE -- can be removed/changed\n   * Change the parent input target element.\n   * If Null, then it is being set the to main element.\n   * @type {Null|EventTarget}\n   * @default null\n   */\n  inputTarget: null,\n\n  /**\n   * @private\n   * force an input class\n   * @type {Null|Function}\n   * @default null\n   */\n  inputClass: null,\n\n  /**\n   * @private\n   * Default recognizer setup when calling `Hammer()`\n   * When creating a new Manager these will be skipped.\n   * @type {Array}\n   */\n  preset: [\n  // RecognizerClass, options, [recognizeWith, ...], [requireFailure, ...]\n  [RotateRecognizer, { enable: false }], [PinchRecognizer, { enable: false }, ['rotate']], [SwipeRecognizer, { direction: DIRECTION_HORIZONTAL }], [PanRecognizer, { direction: DIRECTION_HORIZONTAL }, ['swipe']], [TapRecognizer], [TapRecognizer, { event: 'doubletap', taps: 2 }, ['tap']], [PressRecognizer]],\n\n  /**\n   * @private\n   * Some CSS properties can be used to improve the working of Hammer.\n   * Add them to this method and they will be set when creating a new Manager.\n   * @namespace\n   */\n  cssProps: {\n    /**\n     * @private\n     * Disables text selection to improve the dragging gesture. Mainly for desktop browsers.\n     * @type {String}\n     * @default 'none'\n     */\n    userSelect: 'none',\n\n    /**\n     * @private\n     * Disable the Windows Phone grippers when pressing an element.\n     * @type {String}\n     * @default 'none'\n     */\n    touchSelect: 'none',\n\n    /**\n     * @private\n     * Disables the default callout shown when you touch and hold a touch target.\n     * On iOS, when you touch and hold a touch target such as a link, Safari displays\n     * a callout containing information about the link. This property allows you to disable that callout.\n     * @type {String}\n     * @default 'none'\n     */\n    touchCallout: 'none',\n\n    /**\n     * @private\n     * Specifies whether zooming is enabled. Used by IE10>\n     * @type {String}\n     * @default 'none'\n     */\n    contentZooming: 'none',\n\n    /**\n     * @private\n     * Specifies that an entire element should be draggable instead of its contents. Mainly for desktop browsers.\n     * @type {String}\n     * @default 'none'\n     */\n    userDrag: 'none',\n\n    /**\n     * @private\n     * Overrides the highlight color shown when the user taps a link or a JavaScript\n     * clickable element in iOS. This property obeys the alpha value, if specified.\n     * @type {String}\n     * @default 'rgba(0,0,0,0)'\n     */\n    tapHighlightColor: 'rgba(0,0,0,0)'\n  }\n};\n\nvar SINGLE_TOUCH_INPUT_MAP = {\n  touchstart: INPUT_START,\n  touchmove: INPUT_MOVE,\n  touchend: INPUT_END,\n  touchcancel: INPUT_CANCEL\n};\n\nvar SINGLE_TOUCH_TARGET_EVENTS = 'touchstart';\nvar SINGLE_TOUCH_WINDOW_EVENTS = 'touchstart touchmove touchend touchcancel';\n\n/**\n * @private\n * Touch events input\n * @constructor\n * @extends Input\n */\n\nvar SingleTouchInput = function (_Input) {\n  inherits(SingleTouchInput, _Input);\n\n  function SingleTouchInput() {\n    classCallCheck(this, SingleTouchInput);\n\n    var _this = possibleConstructorReturn(this, (SingleTouchInput.__proto__ || Object.getPrototypeOf(SingleTouchInput)).apply(this, arguments));\n\n    _this.evTarget = SINGLE_TOUCH_TARGET_EVENTS;\n    _this.evWin = SINGLE_TOUCH_WINDOW_EVENTS;\n    _this.started = false;\n\n    Input.apply(_this, arguments);\n    return _this;\n  }\n\n  createClass(SingleTouchInput, [{\n    key: 'handler',\n    value: function handler(ev) {\n      var type = SINGLE_TOUCH_INPUT_MAP[ev.type];\n\n      // should we handle the touch events?\n      if (type === INPUT_START) {\n        this.started = true;\n      }\n\n      if (!this.started) {\n        return;\n      }\n\n      var touches = normalizeSingleTouches.call(this, ev, type);\n\n      // when done, reset the started state\n      if (type & (INPUT_END | INPUT_CANCEL) && touches[0].length - touches[1].length === 0) {\n        this.started = false;\n      }\n\n      this.callback(this.manager, type, {\n        pointers: touches[0],\n        changedPointers: touches[1],\n        pointerType: INPUT_TYPE_TOUCH,\n        srcEvent: ev\n      });\n    }\n  }]);\n  return SingleTouchInput;\n}(Input);\n\nfunction normalizeSingleTouches(ev, type) {\n  var all = toArray$1(ev.touches);\n  var changed = toArray$1(ev.changedTouches);\n\n  if (type & (INPUT_END | INPUT_CANCEL)) {\n    all = uniqueArray(all.concat(changed), 'identifier', true);\n  }\n\n  return [all, changed];\n}\n\n/**\n * @private\n * wrap a method with a deprecation warning and stack trace\n * @param {Function} method\n * @param {String} name\n * @param {String} message\n * @returns {Function} A new function wrapping the supplied method.\n */\nfunction deprecate(method, name, message) {\n  var deprecationMessage = 'DEPRECATED METHOD: ' + name + '\\n' + message + ' AT \\n';\n  return function () {\n    var e = new Error('get-stack-trace');\n    var stack = e && e.stack ? e.stack.replace(/^[^\\(]+?[\\n$]/gm, '').replace(/^\\s+at\\s+/gm, '').replace(/^Object.<anonymous>\\s*\\(/gm, '{anonymous}()@') : 'Unknown Stack Trace';\n\n    var log = window.console && (window.console.warn || window.console.log);\n    if (log) {\n      log.call(window.console, deprecationMessage, stack);\n    }\n    return method.apply(this, arguments);\n  };\n}\n\n/**\n * @private\n * extend object.\n * means that properties in dest will be overwritten by the ones in src.\n * @param {Object} dest\n * @param {Object} src\n * @param {Boolean} [merge=false]\n * @returns {Object} dest\n */\nvar extend = deprecate(function (dest, src, merge) {\n  var keys = Object.keys(src);\n  var i = 0;\n  while (i < keys.length) {\n    if (!merge || merge && dest[keys[i]] === undefined) {\n      dest[keys[i]] = src[keys[i]];\n    }\n    i++;\n  }\n  return dest;\n}, 'extend', 'Use `assign`.');\n\n/**\n * @private\n * merge the values from src in the dest.\n * means that properties that exist in dest will not be overwritten by src\n * @param {Object} dest\n * @param {Object} src\n * @returns {Object} dest\n */\nvar merge = deprecate(function (dest, src) {\n  return extend(dest, src, true);\n}, 'merge', 'Use `assign`.');\n\n/**\n * @private\n * simple class inheritance\n * @param {Function} child\n * @param {Function} base\n * @param {Object} [properties]\n */\nfunction inherit(child, base, properties) {\n  var baseP = base.prototype;\n  var childP = void 0;\n\n  childP = child.prototype = Object.create(baseP);\n  childP.constructor = child;\n  childP._super = baseP;\n\n  if (properties) {\n    assign$1(childP, properties);\n  }\n}\n\n// this prevents errors when Hammer is loaded in the presence of an AMD\n//  style loader but by script tag, not by the loader.\n\nassign$1(Hammer, {\n  INPUT_START: INPUT_START,\n  INPUT_MOVE: INPUT_MOVE,\n  INPUT_END: INPUT_END,\n  INPUT_CANCEL: INPUT_CANCEL,\n\n  STATE_POSSIBLE: STATE_POSSIBLE,\n  STATE_BEGAN: STATE_BEGAN,\n  STATE_CHANGED: STATE_CHANGED,\n  STATE_ENDED: STATE_ENDED,\n  STATE_RECOGNIZED: STATE_RECOGNIZED,\n  STATE_CANCELLED: STATE_CANCELLED,\n  STATE_FAILED: STATE_FAILED,\n\n  DIRECTION_NONE: DIRECTION_NONE,\n  DIRECTION_LEFT: DIRECTION_LEFT,\n  DIRECTION_RIGHT: DIRECTION_RIGHT,\n  DIRECTION_UP: DIRECTION_UP,\n  DIRECTION_DOWN: DIRECTION_DOWN,\n  DIRECTION_HORIZONTAL: DIRECTION_HORIZONTAL,\n  DIRECTION_VERTICAL: DIRECTION_VERTICAL,\n  DIRECTION_ALL: DIRECTION_ALL,\n\n  Manager: Manager,\n  Input: Input,\n  TouchAction: TouchAction,\n\n  TouchInput: TouchInput,\n  MouseInput: MouseInput,\n  PointerEventInput: PointerEventInput,\n  TouchMouseInput: TouchMouseInput,\n  SingleTouchInput: SingleTouchInput,\n\n  Recognizer: Recognizer,\n  AttrRecognizer: AttrRecognizer,\n  Tap: TapRecognizer,\n  Pan: PanRecognizer,\n  Swipe: SwipeRecognizer,\n  Pinch: PinchRecognizer,\n  Rotate: RotateRecognizer,\n  Press: PressRecognizer,\n\n  on: addEventListeners,\n  off: removeEventListeners,\n  each: each,\n  merge: merge,\n  extend: extend,\n  assign: assign$1,\n  inherit: inherit,\n  bindFn: bindFn,\n  prefixed: prefixed,\n  toArray: toArray$1,\n  inArray: inArray,\n  uniqueArray: uniqueArray,\n  splitStr: splitStr,\n  boolOrFn: boolOrFn,\n  hasParent: hasParent,\n  addEventListeners: addEventListeners,\n  removeEventListeners: removeEventListeners\n});\n\n/* jshint ignore:start */\nif (typeof define === 'function' && define.amd) {\n  define(function () {\n    return Hammer;\n  });\n} else if (typeof module !== 'undefined' && module.exports) {\n  module.exports = Hammer;\n} else {\n  window[exportName] = Hammer;\n}\n/* jshint ignore:end */\n})(window, document, 'Hammer');"]}